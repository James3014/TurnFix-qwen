"""
create initial tables

Revision ID: 20251029100000
Revises: 
Create Date: 2025-10-29 10:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '20251029100000'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('symptoms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('synonyms', sa.Text(), nullable=True),
    sa.Column('level_scope', sa.Text(), nullable=True),
    sa.Column('terrain_scope', sa.Text(), nullable=True),
    sa.Column('style_scope', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_symptoms_id'), 'symptoms', ['id'], unique=False)
    
    op.create_table('practice_cards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('goal', sa.Text(), nullable=False),
    sa.Column('tips', sa.Text(), nullable=True),
    sa.Column('pitfalls', sa.Text(), nullable=True),
    sa.Column('dosage', sa.String(length=255), nullable=True),
    sa.Column('level', sa.Text(), nullable=True),
    sa.Column('terrain', sa.Text(), nullable=True),
    sa.Column('self_check', sa.Text(), nullable=True),
    sa.Column('card_type', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_practice_cards_id'), 'practice_cards', ['id'], unique=False)
    
    op.create_table('sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_type', sa.String(length=20), nullable=True),
    sa.Column('input_text', sa.Text(), nullable=False),
    sa.Column('level_slot', sa.String(length=50), nullable=True),
    sa.Column('terrain_slot', sa.String(length=50), nullable=True),
    sa.Column('style_slot', sa.String(length=50), nullable=True),
    sa.Column('chosen_symptom_id', sa.Integer(), nullable=True),
    sa.Column('feedback_rating', sa.String(length=20), nullable=True),
    sa.Column('feedback_text', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sessions_id'), 'sessions', ['id'], unique=False)
    
    op.create_table('symptom_practice_mapping',
    sa.Column('symptom_id', sa.Integer(), nullable=False),
    sa.Column('practice_id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['practice_id'], ['practice_cards.id'], ),
    sa.ForeignKeyConstraint(['symptom_id'], ['symptoms.id'], ),
    sa.PrimaryKeyConstraint('symptom_id', 'practice_id')
    )
    
    op.create_table('practice_card_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('practice_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('feedback_text', sa.Text(), nullable=True),
    sa.Column('is_favorite', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['practice_id'], ['practice_cards.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_practice_card_feedback_id'), 'practice_card_feedback', ['id'], unique=False)
    
    op.create_table('session_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.String(length=20), nullable=True),
    sa.Column('feedback_text', sa.Text(), nullable=True),
    sa.Column('feedback_type', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_session_feedback_id'), 'session_feedback', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_session_feedback_id'), table_name='session_feedback')
    op.drop_table('session_feedback')
    op.drop_index(op.f('ix_practice_card_feedback_id'), table_name='practice_card_feedback')
    op.drop_table('practice_card_feedback')
    op.drop_table('symptom_practice_mapping')
    op.drop_index(op.f('ix_sessions_id'), table_name='sessions')
    op.drop_table('sessions')
    op.drop_index(op.f('ix_practice_cards_id'), table_name='practice_cards')
    op.drop_table('practice_cards')
    op.drop_index(op.f('ix_symptoms_id'), table_name='symptoms')
    op.drop_table('symptoms')
    # ### end Alembic commands ###